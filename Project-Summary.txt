Create Mystery Message                          Date: 10-10-2024

* First I create one user message model using mongoose and type script and after create user model with multiple fields.
=> I verified email address using regexr and check expiry using date.
=> Next js working in edge side so I export model like (exisiting schema) || (create new schema)
=>Mongoose using make schema for MongoDB

#Zode
=> TypeScript first schema validation with static type inference
=> https://github.com/colinhacks/zod
=> TypeScript is check the Schema is valid or not.

#FileName
=> When we give file name like (auth) means give make group not counting in route

#MongoDB
=>When making Next Js application at that time check database connaction if they have already so can use it either make new mongodb connection. 
=>MongoDB return value is array and I extract first value of array and check ready state and then last export MongoDB

#Resend 
=>Make Signup page use Resend Library and make Signup page For sending OTP in email
=>React email true create Email templete and also this Library have many components.

* Helper Folder
=>Create Helper Folder for make oraginzed code if you are not using it's ok.

* Email Folder
=>Create Email Folder for make code easy and create multiple templete here and also you make cod easy.

*Types Folder
=>Create Custom Type to create this folder and also when make other custom folder also usse same folder.

#ApiResponse
=>Create ApiResponse file for makeing one interface and also using in send verification email and this also use type Safety.
=>In sent mail at this time i use this file and also return promise and message.

#Api's 
=>In api first import all the code and ApiResponse
=>In write function first make name is which type of request we are expecting this type of name 
=>And First connect DB and then try catch block
=>In the message send time || ApiResponse send time I send Json format data.
=>In the try block when We collect data from front end at that time we are required await
=>And also extract data from json bsc of we have 3 fields in front end so first we separate.

#OTP
=>Create the OTP || verifiedCode using math.random() function and also put in user model

#Json Request
=>In the sign-up file check user is already verified or not by the Usermodel and if user name is already existing to give json response and user is not register.
=>In the sign-up page make one exisitingUserByEmail and this is not find so make hashed password by Hash Function.

#Create New Usermodel
=>Create new usermodel and give all required data in usermodel and also see the usermodel(using new keyword).
=>and After creating usermodel save the usermodel.(using .save() method)

#Send Email verification    
=>send email verification with username,password and verifiedCode and send mail
=>after send email this mail direct give success message so verified user and and not give success message throw error.

#IsverifiedByEmail
=>After this 2 case is possible one is email is already existing and one is create new user.
=>Create new user give new password, email, verifiedCode.

#Next_Auth(Means Direct Login Like Github, Google)
=>First Make two file (route & options) and go to documentation and then go to providers 
=>Credentials Means Username or Password, Email or Password
=>Configuration->CallBacks: signIn,redirect,jwt,session
=>All Login have one separate file which is options
=>providers give me many method id,name and authorize
=>and we gave authorize method and pass Credentials in this parameters
=>In Use Time Username = Credentials.identifier and password = Credentials.password otherwise code give error
=>After Take value Compare with user password and password doesn't match so throw error and password is exist so return the user
=>Pages give me new pages who's define by Next_Auth
=>In CallBacks Focus In return 
=>if CallBacks time he give error so make new file next-auth.d.ts and declare some interface and also make data fields

#Route in Next_Auth
=>first import option and then make new function handle and pass the auth option and export 